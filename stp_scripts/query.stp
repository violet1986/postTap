#!/usr/bin/env stap
function parse_planstate:string (planstate:long) {
    return sprintf("statetype:%d,addr:%p,plan:%p,left:%p,right:%p", kernel_int(planstate), planstate, kernel_long(planstate+8), kernel_long(planstate+56),kernel_long(planstate+64)) 
}
function parse_plan:string (plan:long) {
    return sprintf("plantype:%d,plan:%p,leftplan:%p,rightplan:%p", kernel_int(plan), plan, kernel_long(plan+64), kernel_long(plan+72)) 
}


probe process("/usr/local/pgsql/bin/postgres").function("ExecutorStart").call   
{
    printdln("|", pid(), ppfunc())
}

probe process("/usr/local/pgsql/bin/postgres").function("ExecutorFinish").call 
{ 
    printdln("|", pid(), ppfunc())
}
probe process("/usr/local/pgsql/bin/postgres").function("CreateQueryDesc").call   
{
    printdln("|", pid(), ppfunc())
}
probe process("/usr/local/pgsql/bin/postgres").function("StatementCancelHandler").call   
{
    printdln("|", pid(), ppfunc())
}

probe process("/usr/local/pgsql/bin/postgres").function("ExecProcNode").call
{
    plan_state = long_arg(1)
    printdln("|", pid(), ppfunc(), parse_planstate(plan_state))
}


probe process("/usr/local/pgsql/bin/postgres").function("ExecInitNode").call
{
    plan = long_arg(1)
    printdln("|", pid(), ppfunc(), parse_plan(plan))
}
